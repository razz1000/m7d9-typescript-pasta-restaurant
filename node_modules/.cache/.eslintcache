[{"/Users/rasmus/Documents/Github/StriveSchool/m7d9-typescript-pasta-restaurant/src/reportWebVitals.js":"1","/Users/rasmus/Documents/Github/StriveSchool/m7d9-typescript-pasta-restaurant/src/components/Booking.tsx":"2","/Users/rasmus/Documents/Github/StriveSchool/m7d9-typescript-pasta-restaurant/src/components/Details.jsx":"3","/Users/rasmus/Documents/Github/StriveSchool/m7d9-typescript-pasta-restaurant/src/App.tsx":"4","/Users/rasmus/Documents/Github/StriveSchool/m7d9-typescript-pasta-restaurant/src/index.tsx":"5","/Users/rasmus/Documents/Github/StriveSchool/m7d9-typescript-pasta-restaurant/src/components/Home.tsx":"6","/Users/rasmus/Documents/Github/StriveSchool/m7d9-typescript-pasta-restaurant/src/components/DishComments.tsx":"7","/Users/rasmus/Documents/Github/StriveSchool/m7d9-typescript-pasta-restaurant/src/components/Menu.tsx":"8","/Users/rasmus/Documents/Github/StriveSchool/m7d9-typescript-pasta-restaurant/src/components/MyNavbar.tsx":"9","/Users/rasmus/Documents/Github/StriveSchool/m7d9-typescript-pasta-restaurant/src/components/NotFound.tsx":"10","/Users/rasmus/Documents/Github/StriveSchool/m7d9-typescript-pasta-restaurant/src/components/ReservationForm.tsx":"11","/Users/rasmus/Documents/Github/StriveSchool/m7d9-typescript-pasta-restaurant/src/components/Reservations.tsx":"12"},{"size":362,"mtime":1637496333000,"results":"13","hashOfConfig":"14"},{"size":494,"mtime":1637496333000,"results":"15","hashOfConfig":"14"},{"size":1175,"mtime":1655981589681,"results":"16","hashOfConfig":"14"},{"size":929,"mtime":1637496333000,"results":"17","hashOfConfig":"14"},{"size":449,"mtime":1655981902484,"results":"18","hashOfConfig":"14"},{"size":1464,"mtime":1655985041311,"results":"19","hashOfConfig":"14"},{"size":547,"mtime":1655983538692,"results":"20","hashOfConfig":"14"},{"size":693,"mtime":1655983815787,"results":"21","hashOfConfig":"14"},{"size":1466,"mtime":1655984152575,"results":"22","hashOfConfig":"14"},{"size":152,"mtime":1637496333000,"results":"23","hashOfConfig":"14"},{"size":3888,"mtime":1655985035736,"results":"24","hashOfConfig":"14"},{"size":1644,"mtime":1655985143372,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"1w93jhm",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"31"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/rasmus/Documents/Github/StriveSchool/m7d9-typescript-pasta-restaurant/src/reportWebVitals.js",[],["53","54"],"/Users/rasmus/Documents/Github/StriveSchool/m7d9-typescript-pasta-restaurant/src/components/Booking.tsx",[],["55","56"],"/Users/rasmus/Documents/Github/StriveSchool/m7d9-typescript-pasta-restaurant/src/components/Details.jsx",[],"/Users/rasmus/Documents/Github/StriveSchool/m7d9-typescript-pasta-restaurant/src/App.tsx",[],"/Users/rasmus/Documents/Github/StriveSchool/m7d9-typescript-pasta-restaurant/src/index.tsx",[],"/Users/rasmus/Documents/Github/StriveSchool/m7d9-typescript-pasta-restaurant/src/components/Home.tsx",[],"/Users/rasmus/Documents/Github/StriveSchool/m7d9-typescript-pasta-restaurant/src/components/DishComments.tsx",[],"/Users/rasmus/Documents/Github/StriveSchool/m7d9-typescript-pasta-restaurant/src/components/Menu.tsx",[],"/Users/rasmus/Documents/Github/StriveSchool/m7d9-typescript-pasta-restaurant/src/components/MyNavbar.tsx",[],"/Users/rasmus/Documents/Github/StriveSchool/m7d9-typescript-pasta-restaurant/src/components/NotFound.tsx",[],"/Users/rasmus/Documents/Github/StriveSchool/m7d9-typescript-pasta-restaurant/src/components/ReservationForm.tsx",["57","58"],"import React, { ChangeEvent, FormEvent, useState } from \"react\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport { Reservation } from \"../types/interfaces\";\r\n\r\nconst ReservationForm = () => {\r\n  const [reservation, setReservation] = useState<Reservation>({\r\n    name: \"\",\r\n    phone: 0,\r\n    numberOfPeople: 1,\r\n    smoking: false,\r\n    dateTime: \"\",\r\n    specialRequests: \"\",\r\n  });\r\n\r\n  const handleInput = (fieldName: string, value: number) => {\r\n    setReservation({\r\n      ...reservation,\r\n      [fieldName]: value,\r\n    });\r\n  };\r\n\r\n  const handleSubmit = async (e: any) => {\r\n    e.preventDefault();\r\n    console.log(reservation);\r\n    try {\r\n      let response = await fetch(\r\n        \"https://striveschool-api.herokuapp.com/api/reservation\",\r\n        {\r\n          method: \"POST\",\r\n          body: JSON.stringify(reservation),\r\n          headers: {\r\n            \"Content-type\": \"application/json\",\r\n          },\r\n        }\r\n      );\r\n\r\n      if (response.ok) {\r\n        alert(\"OK!\");\r\n        setReservation({\r\n          name: \"\",\r\n          phone: 0,\r\n          numberOfPeople: 1,\r\n          smoking: false,\r\n          dateTime: \"\",\r\n          specialRequests: \"\",\r\n        });\r\n      } else {\r\n        alert(\"ERROR\");\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <h2>Book your table NOW!</h2>\r\n      <Form onSubmit={handleSubmit}>\r\n        <Form.Group>\r\n          <Form.Label>Your name</Form.Label>\r\n          <Form.Control\r\n            type=\"text\"\r\n            placeholder=\"Input your name\"\r\n            value={reservation.name}\r\n            onChange={(e: any) => {\r\n              handleInput(\"name\", e.target.value);\r\n            }}\r\n            required\r\n          />\r\n        </Form.Group>\r\n        <Form.Group>\r\n          <Form.Label>Your phone</Form.Label>\r\n          <Form.Control\r\n            type=\"tel\"\r\n            placeholder=\"Input your cellphone\"\r\n            value={reservation.phone}\r\n            onChange={(e: any) => {\r\n              handleInput(\"phone\", e.target.value);\r\n            }}\r\n            required\r\n          />\r\n        </Form.Group>\r\n        <Form.Group>\r\n          <Form.Label>How many people?</Form.Label>\r\n          <Form.Control\r\n            as=\"select\"\r\n            value={reservation.numberOfPeople}\r\n            onChange={(e: any) => {\r\n              handleInput(\"numberOfPeople\", e.target.value);\r\n            }}\r\n            required\r\n          >\r\n            <option>1</option>\r\n            <option>2</option>\r\n            <option>3</option>\r\n            <option>4</option>\r\n            <option>5</option>\r\n            <option>6</option>\r\n          </Form.Control>\r\n        </Form.Group>\r\n        <Form.Group>\r\n          <Form.Check\r\n            type=\"checkbox\"\r\n            label=\"Do you smoke?\"\r\n            checked={reservation.smoking}\r\n            onChange={(e: any) => {\r\n              handleInput(\"smoking\", e.target.checked);\r\n            }}\r\n          />\r\n        </Form.Group>\r\n        <Form.Group>\r\n          <Form.Label>Date?</Form.Label>\r\n          <Form.Control\r\n            type=\"datetime-local\"\r\n            value={reservation.dateTime}\r\n            onChange={(e: any) => {\r\n              handleInput(\"dateTime\", e.target.value);\r\n            }}\r\n            required\r\n          />\r\n        </Form.Group>\r\n        <Form.Group>\r\n          <Form.Label>Any special request?</Form.Label>\r\n          <Form.Control\r\n            as=\"textarea\"\r\n            rows={5}\r\n            value={reservation.specialRequests}\r\n            onChange={(e: any) => {\r\n              handleInput(\"specialRequests\", e.target.value);\r\n            }}\r\n          />\r\n        </Form.Group>\r\n        <Button variant=\"primary\" type=\"submit\">\r\n          Submit\r\n        </Button>\r\n      </Form>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ReservationForm;\r\n","/Users/rasmus/Documents/Github/StriveSchool/m7d9-typescript-pasta-restaurant/src/components/Reservations.tsx",[],{"ruleId":"59","replacedBy":"60"},{"ruleId":"61","replacedBy":"62"},{"ruleId":"59","replacedBy":"60"},{"ruleId":"61","replacedBy":"62"},{"ruleId":"63","severity":1,"message":"64","line":1,"column":17,"nodeType":"65","messageId":"66","endLine":1,"endColumn":28},{"ruleId":"63","severity":1,"message":"67","line":1,"column":30,"nodeType":"65","messageId":"66","endLine":1,"endColumn":39},"no-native-reassign",["68"],"no-negated-in-lhs",["69"],"@typescript-eslint/no-unused-vars","'ChangeEvent' is defined but never used.","Identifier","unusedVar","'FormEvent' is defined but never used.","no-global-assign","no-unsafe-negation"]